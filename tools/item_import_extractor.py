import yaml
import io

# List of custom items
matches = [671,2576,5151,5181,5208,5211,5276,5278,5283,5305,5311,5314,5315,5322,5357,5358,5359,5361,
5362,5372,5377,5379,5388,5389,5401,5420,5421,5429,5462,5463,5465,5466,5467,5471,5483,5490,5495,5498,
5548,5557,5563,5564,5574,5585,5591,5592,5641,5680,5765,5800,5876,5897,5898,5899,5900,5901,5902,5903,
5904,5905,5906,5907,5963,12214,12411,17229,18522,18539,18540,18541,18542,18550,18563,18589,18597,
18646,18651,18666,18668,18673,18693,18750,18791,18793,18794,18795,18885,18934,19133,19249,19291,
19263,19296,19300,19308,20195,22000,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,
22011,31437,31452,40000,100231]

inputPath = "db/re/item_db.yml"
outputPath = "db/re/item_db_extract.yml"

# Parse generated item db (created by CSV2YAML tool)
print("Loading " + inputPath + " ...")
with open(inputPath, 'r') as stream:
    data = yaml.safe_load(stream)

if "Body" not in data:
    print("Input file was not generated by CSV2YAML tool. Exiting.")
    quit()

# Filter for custom items
print("Processing ...")
items = []
for entry in data["Body"]:
    if entry["Id"] in matches:
        if "Script" in entry:
            entry["Script"] = entry["Script"].replace("\n", "")
        if "UnEquipScript" in entry:
            entry["UnEquipScript"] = entry["UnEquipScript"].replace("\n", "")
        items.append(entry)

# Dump yaml in specified style
print("Dumping yaml to " + outputPath + " ...")
with io.open(outputPath, 'w', encoding='utf8') as outfile:
    yaml.dump({"Header": {"Type": "ITEM_DB", "Version": 1}, "Body": items}, outfile, default_flow_style=False, allow_unicode=True, sort_keys=False, width=500, indent=2)
print("Done")